{"ast":null,"code":"var _jsxFileName = \"/Users/sravanb/Personal/ReactExamples/react-tic-tac-toe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport Game from './components/game';\nimport { createStore } from 'redux';\nimport calculateWinner from './helper/calculateWinner';\nimport './index.css';\nconst initialState = {\n  history: [{\n    squares: Array(9).fill(null)\n  }],\n  stepNumber: 0,\n  xIsNext: true\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CLICK':\n      {\n        const i = action.i;\n        debugger;\n        const history = state.history.slice(0, state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        if (calculateWinner(squares) || squares[i]) {\n          return;\n        }\n\n        squares[i] = state.xIsNext ? \"X\" : \"O\";\n        this.setState({\n          history: history.concat([{\n            squares: squares\n          }]),\n          stepNumber: history.length,\n          xIsNext: !state.xIsNext\n        });\n      }\n  }\n\n  return state;\n};\n\nconst store = createStore(reducer); // ======================================== //\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n})), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/sravanb/Personal/ReactExamples/react-tic-tac-toe/src/index.js"],"names":["React","ReactDOM","Provider","Game","createStore","calculateWinner","initialState","history","squares","Array","fill","stepNumber","xIsNext","reducer","state","action","type","i","slice","current","length","setState","concat","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,OAAO,aAAP;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADX,GADO,CADU;AAMnBC,EAAAA,UAAU,EAAE,CANO;AAOnBC,EAAAA,OAAO,EAAE;AAPU,CAArB;;AAUA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAoC;AAClD,UAAOA,MAAM,CAACC,IAAd;AAEE,SAAK,OAAL;AACE;AACE,cAAMC,CAAC,GAAGF,MAAM,CAACE,CAAjB;AACA;AACA,cAAMV,OAAO,GAAGO,KAAK,CAACP,OAAN,CAAcW,KAAd,CAAoB,CAApB,EAAuBJ,KAAK,CAACH,UAAN,GAAmB,CAA1C,CAAhB;AACA,cAAMQ,OAAO,GAAGZ,OAAO,CAACA,OAAO,CAACa,MAAR,GAAiB,CAAlB,CAAvB;AACA,cAAMZ,OAAO,GAAGW,OAAO,CAACX,OAAR,CAAgBU,KAAhB,EAAhB;;AACA,YAAIb,eAAe,CAACG,OAAD,CAAf,IAA4BA,OAAO,CAACS,CAAD,CAAvC,EAA4C;AAC1C;AACD;;AACDT,QAAAA,OAAO,CAACS,CAAD,CAAP,GAAaH,KAAK,CAACF,OAAN,GAAgB,GAAhB,GAAsB,GAAnC;AACA,aAAKS,QAAL,CAAc;AACZd,UAAAA,OAAO,EAAEA,OAAO,CAACe,MAAR,CAAe,CACtB;AACEd,YAAAA,OAAO,EAAEA;AADX,WADsB,CAAf,CADG;AAMZG,UAAAA,UAAU,EAAEJ,OAAO,CAACa,MANR;AAOZR,UAAAA,OAAO,EAAE,CAACE,KAAK,CAACF;AAPJ,SAAd;AASD;AAtBL;;AAyBA,SAAOE,KAAP;AACD,CA3BD;;AA6BA,MAAMS,KAAK,GAAGnB,WAAW,CAACS,OAAD,CAAzB,C,CACA;;AAEAZ,QAAQ,CAACuB,MAAT,CAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CAAhB,EAA6DE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA7D","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport Game from './components/game'\nimport { createStore } from 'redux'\nimport calculateWinner from './helper/calculateWinner'\n\nimport './index.css';\n\nconst initialState = {\n  history: [\n    {\n      squares: Array(9).fill(null)\n    }\n  ],\n  stepNumber: 0,\n  xIsNext: true\n}\n\nconst reducer = (state = initialState, action )  => {\n  switch(action.type)\n  {\n    case 'CLICK':\n      {\n        const i = action.i\n        debugger\n        const history = state.history.slice(0, state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n          return;\n        }\n        squares[i] = state.xIsNext ? \"X\" : \"O\";\n        this.setState({\n          history: history.concat([\n            {\n              squares: squares\n            }\n          ]),\n          stepNumber: history.length,\n          xIsNext: !state.xIsNext\n        });\n      }\n\n  }\n  return state\n}\n\nconst store = createStore(reducer)\n// ======================================== //\n\nReactDOM.render(<Provider store={store}><Game /></Provider>, document.getElementById(\"root\"))\n\n"]},"metadata":{},"sourceType":"module"}